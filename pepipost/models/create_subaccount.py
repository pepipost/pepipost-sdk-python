# -*- coding: utf-8 -*-

"""
    pepipost

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class CreateSubaccount(object):

    """Implementation of the 'Create subaccount' model.

    CreateSubaccount modal

    Attributes:
        username (string): provide a username for the subaccount
        email (string): email address to be registered with the account.
        setpassword (string): You can opt to set the password for the
            subaccount.\nIf set as 1, please provide a value in password
            parameter.\nIf set as 0, the email confirmation link will act as a
            password reset link.
        password (string): It is required to pass this value, if setpassword
            is set as 1.\nThe password must comprise minimum of 8 characters
            and include one uppercase character, one lowercase character, one
            numeric character.
        credit_type (string): Allowed values one_time_credit or unlimited by
            default, all subaccounts are created with credit type as
            unlimited.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "username":'username',
        "email":'email',
        "setpassword":'setpassword',
        "password":'password',
        "credit_type":'credit_type'
    }

    def __init__(self,
                 username=None,
                 email=None,
                 setpassword=None,
                 password=None,
                 credit_type=None):
        """Constructor for the CreateSubaccount class"""

        # Initialize members of the class
        self.username = username
        self.email = email
        self.setpassword = setpassword
        self.password = password
        self.credit_type = credit_type


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        username = dictionary.get('username')
        email = dictionary.get('email')
        setpassword = dictionary.get('setpassword')
        password = dictionary.get('password')
        credit_type = dictionary.get('credit_type')

        # Return an object of this model
        return cls(username,
                   email,
                   setpassword,
                   password,
                   credit_type)


